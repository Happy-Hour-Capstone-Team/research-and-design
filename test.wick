/:
This is an example Wick program demonstrating the most basic
features of the language. 
:/

variable a = 1 + 2 + 3; // This should be 6.
variable b = 1 * 2 * 3; // This should be 6.
a = a / b; // This should be 1. 
b = a * b; // This should be 6. 

{
    a = 3.141; // Global a should now be 3.141
    variable b = 1.414; // Global b should be unaffected
}

if b == 6 { // If true, b should be 2.
    b = 2;
} else if a == 3.141 { // If true, b should be 3.
    b = 3;
} else if 1 == 1 { // If true, b should be 4.
    b = 4;
} else { // Otherwise, set b to 5.
    b = 5;
}

a = 0;
while a < 5 { // After this, a should be 5.
    a = a + 1;
}

for i = 10; i >= 0; i = i - 1 {
    b = i;
}

a = time();
a = 3.14159265 + 2;
print(a);
print(b);
print("Hello world!");
/:variable c = input("What's your favorite color?");
print(c);:/

variable d = lambda(x) {
    x();
};

function e(){
    print("Yup, this is functional...");
}

d(e);
d(lambda () { print("Very functional indeed..."); });

function addThreeNumbers(a, b, c) {
    variable sum = a + b + c;
    print(sum);
}

addThreeNumbers(1, 2, 3);

function fib(n) {
    if(n <= 1) { 
        return n;
    }
    return fib(n - 2) + fib(n - 1);
}

print(fib(10));

variable test = "global";
{
    function showTest() {
        print(test);
    }

    showTest();
    variable test = "block";
    showTest();
}

/:

class Concept {
    function implementMe() = nothing;

    private variable id; 
}

class Person from Concept {
    private variable name;

    public Person(iName) {
        name = iName;
    }

    public function implementMe() {
        print("Now this has been overriden!");
    }

    public function intro() {
        print("Hello, my name is " + name);
    }
}

guy = Person("Joe");
guy.intro();